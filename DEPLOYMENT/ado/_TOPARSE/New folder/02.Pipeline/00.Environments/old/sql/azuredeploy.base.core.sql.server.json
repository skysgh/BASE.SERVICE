{

// Schema: https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers

  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sqlServerResourceMode": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Incremental",
      "allowedValues": [
        "Incremental"
      ]
    },
    "sqlServerResourceName": {
      "type": "string"
    },
    "sqlServerResourceLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "southeastasia"
      ],
      "metadata": {
        "description": "The location for the SQL service. This is parameterised because SQL servers cannot be deployed in all regions for subscription types."
      }
    },
    "sqlServerAdministratorLogin": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Provide the Sql Server Administrator's Login. Required when creating a new Database Server. This is unfortunate as it requires risk-mitigation processes around deployment to correctly secure the secret and not leave it in the hands of stakeholders that don't absolutely need to know it. Developers don't."
      }
    },
    "sqlServerAdministratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Provide the Sql Server Administrator's Password. Required when creating a new Database Server. This is unfortunate as it requires risk-mitigation processes around deployment to correctly secure the secret and not leave it in the hands of stakeholders that don't absolutely need to know it. Developers don't."
      }
    },
    "sqlServerTags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "A Complex Object (ie, JSON) containing a series of stringKey/stringValues that are added to the target resource as Tags."
      }
    }
  },
  "variables": {
    "currentTemplateUrl": "[deployment().properties.templateLink.uri]",
    "currentTemplateUriRoot": "[uri(deployment().properties.templateLink.uri, '')]",
    "tmp": {
      // although a database can be created with capitals via script, subsequently creating a db can run into issues...as
      // it really does expect a lowercase name, [a-z0-9\-], limited to 63 chracters, so that it is available as a subdomain:
      // xyz.database.windows.net
      "resourceName": "[parameters('sqlServerResourceName')]",
      // and the lowercase version of the name is what is expected when creating the database next 
      // where the sql server part of a database name (before the single slash) must be lowercase, [a-z0-9\-]
        "resourceNameUrl": "[toLower(replace(parameters('sqlServerResourceName'),'_','-'))]"
    },
    "sql": {
      "server": {
        "resourceType": "Microsoft.Sql/servers",
        "resourceMode": "[parameters('SqlServerResourceMode')]",
        "resourceName": "[variables('tmp').resourceNameUrl]",
        "location": "[parameters('sqlServerResourceLocation')]",
        "administrator": {
          "login": "[parameters('sqlServerAdministratorLogin')]",
          "loginPassword": "[parameters('sqlServerAdministratorLoginPassword')]"
        },
        "tags": "[parameters('sqlServerTags')]"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Sql/servers",
      "name": "[variables('sql').server.resourceName]",
      "location": "[variables('sql').server.location]",
      "apiVersion": "2015-05-01-preview",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "administratorLogin": "[variables('sql').server.administrator.login]",
        "administratorLoginPassword": "[variables('sql').server.administrator.loginPassword]"
      },
      "tags": "[variables('sql').server.tags]",
      "comments": ""
    }
  ],
  "outputs": {
    "resourceId": {
      "value": "[resourceId(variables('sql').server.resourceType, variables('sql').server.resourceName)]",
      "type": "string"
    },
    "resourceName": {
      "value": "[variables('sql').server.resourceName]",
      "type": "string"
    },
    "resourceLocation": {
      "value": "[variables('sql').server.location]",
      "type": "string"
    },
    "administratorLogin": {
      "value": "[variables('sql').server.administrator.loginPassword]",
      "type": "string"
    },
    "administratorPassword": {
      "value": "[take(variables('sql').server.administrator.loginPassword, 3)]",
      "type": "string"
    }
  }
}