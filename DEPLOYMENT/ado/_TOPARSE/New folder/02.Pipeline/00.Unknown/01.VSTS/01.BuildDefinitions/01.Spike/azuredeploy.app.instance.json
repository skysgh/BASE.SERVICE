{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The URI of the storage blob containing linked templates"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The SAS token for accessing the storage account used for storing linked templates"
      }
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "dev",
        "test",
        "uat",
        "prod"
      ],
      "metadata": {
        "description": "The environment this is deploying. This is used to specify the naming convention for resources."
      }
    },
    "apId": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The Id number for this environment to append to the resource names, e.g. sb2558"
      }
    },
    "StorageAccount01Name": {
      "type": "string",
      "minLength": 1
    },
    "StorageAccount02Name": {
      "type": "string",
      "minLength": 1
    },
    "serverFarmSkuName": {
      "type": "string",
      "defaultValue": "D1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "StorageAccount01Type": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "StorageAccount02Type": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "SQLServerAdminLogin": {
      "type": "string",
      "minLength": 1
    },
    "SQLServerAdminLoginPassword": {
      "type": "securestring"
    },
    "SQL_DB01_Collation": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "SQL_DB01_Edition": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "SQL_DB01_PerformanceLevel": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "sqlServiceLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "East US",
        "South Central US",
        "Southeast Asia",
        "West Central US",
        "West Europe",
        "West US 2"
      ],
      "metadata": {
        "description": "The location for the SQL service. This is parameterised because SQL servers cannot be deployed in all regions for subscription types."
      }
    },
    "deployAIS": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Controls whether Application Insights and related metrics and auto-scaling features are deployed or not. Defaults to true."
      }
    }
  },
  "variables": {
    "envLetter": "[if(equals(parameters('environment'),'dev'),'d',if(equals(parameters('environment'),'test'),'t',if(equals(parameters('environment'),'uat'),'u',if(equals(parameters('environment'),'prod'),'p',json('null')))))]",
    "serverFarmName": "[concat('m', variables('envLetter'),'-col-asp-ap', parameters('apId'))]",
    "SQL_DB01_Name": "[concat('m', variables('envLetter'),'-col-sqldb-ap', parameters('apId'))]",
    "SQL_Server_Name": "[concat('m', variables('envLetter'),'-col-sqlvsr-ap', parameters('apId'))]",
    "WebFE_Name": "[concat('m', variables('envLetter'),'-col-as-ap', parameters('apId'))]",
    "AIS001_name": "[concat('m', variables('envLetter'),'-col-ais-ap', parameters('apId'))]"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "azuredeploy.ap.common",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "debugSetting": {
          "detailLevel": "RequestContent"
        },
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/azuredeploy.ap.common.json',parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serverFarmName": { "value": "[variables('serverFarmName')]" },
          "serverFarmSkuName": { "value": "[parameters('serverFarmSkuName')]" },
          "StorageAccount01Name": { "value": "[parameters('StorageAccount01Name')]" },
          "StorageAccount02Name": { "value": "[parameters('StorageAccount02Name')]" }
        }
      },
      "comments": "Makes sure that the common resources the auto-provisioned instances rely on are deployed"
    },
    {
      "apiVersion": "2017-05-10",
      "name": "azuredeploy.ap.sql",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "debugSetting": {
          "detailLevel": "RequestContent"
        },
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/azuredeploy.ap.sql.json',parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "SQL_Server_Name": { "value": "[variables('SQL_Server_Name')]" },
          "SQLServerAdminLogin": { "value": "[parameters('SQLServerAdminLogin')]" },
          "SQLServerAdminLoginPassword": { "value": "[parameters('SQLServerAdminLoginPassword')]" },
          "SQL_DB01_Name": { "value": "[variables('SQL_DB01_Name')]" },
          "SQL_DB01_Collation": { "value": "[parameters('SQL_DB01_Collation')]" },
          "SQL_DB01_Edition": { "value": "[parameters('SQL_DB01_Edition')]" },
          "SQL_DB01_PerformanceLevel": { "value": "[parameters('SQL_DB01_PerformanceLevel')]" },
          "sqlServiceLocation": { "value": "[parameters('sqlServiceLocation')]" }
        }
      },
      "comments": "Deploys SQL database resources"
    },
    {
      "apiVersion": "2016-08-01",
      "name": "[variables('WebFE_Name')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "scale": null,
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'azuredeploy.ap.common')]"
      ],
      "tags": {
        "displayName": "Web Front End"
      },
      "properties": {
        "name": "[variables('WebFE_Name')]",
        "serverFarmId": "[reference('azuredeploy.ap.common').outputs.appServicePlanResourceId.value]"
      },
      "resources": [],
      "comments": "This depends on the App Service Plan existing but can't depend on a resource not deployed in this template. This is therefore dependent on that template being deloyed in its entirety."
    },
    {
      "apiVersion": "2017-05-10",
      "name": "azuredeploy.ap.ais",
      "type": "Microsoft.Resources/deployments",
      "condition": "[parameters('deployAIS')]",
      "properties": {
        "debugSetting": {
          "detailLevel": "RequestContent"
        },
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/azuredeploy.ap.ais.json',parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serverFarmName": { "value": "[variables('serverFarmName')]" },
          "WebFE_Name": { "value": "[reference(variables('WebFE_Name')).name]" },
          "AIS001_name": { "value": "[variables('AIS001_name')]" },
          "serverFarmResourceId": { "value": "[reference('azuredeploy.ap.common').outputs.appServicePlanResourceId.value]" }
        }
      },
      "comments": "Deploys Application Insights. Note that the App Service must be deployed first, hence the reference function call on the WebFE_Name parameter."
    }
  ]
}