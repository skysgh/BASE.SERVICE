{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "keyVaultVaultResourceName": {
            "type": "string"
        },
        "keyVaultVaultResourceLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "allowedValues": [
              "australiaeast",
              "australiasoutheast",
              "southeastasia"
            ],
            "metadata": {
              "description": "The location within which to develop the resource."
            }
        },
        "keyVaultVaultResourceSku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "..."
            }
        },
        "keyVaultVaultSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]",
            "metadata": {
                "description": "The current subscription."
            }
        },
        "keyVaultVaultEnabledForDeployment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies if the vault is enabled for VM or Service Fabric deployment"
            }
        },
        "keyVaultVaultEnabledForTemplateDeployment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies if the vault is enabled for ARM template deployment"
            }
        },
        "keyVaultVaultEnabledForDiskEncryption": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies if the vault is enabled for volume encryption"
            }
        },
        "keyVaultVaultEnableSoftDelete": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Specifies if the vault is enabled for volume encryption"
            }
        },
        "keyVaultVaultTags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "A Complex Object (ie, JSON) containing a series of stringKey/stringValues that are added to the target resource as Tags."
            }
        }
    },
    "variables": {
        "tmp": {
            "resourceName": "[parameters('keyVaultVaultResourceName')]"
        },
        "keyVault": {
            "vault": {
                "resourceName": "[variables('tmp').resourceName]",
                "resourceNameUrl": "[take( toLower( replace( replace ( variables('tmp').resourceName,'-',''),'_','')), 24)]",
                "resourceLocation": "[coalesce(parameters('keyVaultVaultResourceLocation'))]",
                "resourceType": "Microsoft.KeyVault/vaults",
                "resourceSku": "[parameters('keyVaultVaultResourceSku')]",
                "enabledForDeployment": "[parameters('keyVaultVaultEnabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('keyVaultVaultEnabledForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('keyVaultVaultEnabledForDiskEncryption')]",
                "enableSoftDelete": "[parameters('keyVaultVaultEnableSoftDelete')]",
                "subscriptionId": "[parameters('keyVaultVaultSubscriptionId')]",
                "tags": "[parameters('keyVaultVaultTags')]"
            }
        }
    },
    "resources": [
        {
            "name": "[variables('keyVault').vault.resourceNameUrl]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "location": "[variables('keyVault').vault.resourceLocation]",
            "tags": "[variables('keyVault').vault.tags]",
            "properties": {
                "tenantId": "[variables('keyVault').vault.subscriptionId]",
                "sku": {
                    "family": "A",
                    "name": "[variables('keyVault').vault.resourceSku]"
                },
                "accessPolicies": [

                ],
                
                "vaultUri": "[variables('keyVault').vault.resourceNameUrl]",
                "enabledForDeployment": "[variables('keyVault').vault.enabledForDeployment]",
                "enabledForDiskEncryption": "[variables('keyVault').vault.enabledForDiskEncryption]",
                "enabledForTemplateDeployment": "[variables('keyVault').vault.enabledForTemplateDeployment]",
                "enableSoftDelete": "[variables('keyVault').vault.enableSoftDelete]",
                "createMode":"default"
                

            }
        }
    ],
    "outputs": {
        "resourceId": {
            "type": "string",
            "value": "[resourceId(variables('keyVault').vault.resourceType, variables('keyVault').vault.resourceNameUrl)]"
        },
        "resourceName": {
            "type": "string",
            "value": "[variables('keyVault').vault.resourceName]"
        },
        "resourceNameUrl": {
            "type": "string",
            "value": "[variables('keyVault').vault.resourceNameUrl]"
        },
        "subscriptionId": {
            "type": "string",
            "value": "[variables('keyVault').vault.subscriptionId]"
        }
    }
}